# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mock-s3-ingress
  namespace: zeroops
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # 适配KubeSphere Ingress Controller
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  # 业务服务访问
  - host: mock-s3-metadata.local  
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metadata-service
            port:
              number: 8081
  - host: mock-s3-storage.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storage-service
            port:
              number: 8082
  - host: mock-s3-queue.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: queue-service
            port:
              number: 8083
  - host: mock-s3-thirdparty.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: third-party-service
            port:
              number: 8084
  # 监控面板访问
  - host: mock-s3-grafana.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
  - host: mock-s3-prometheus.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
  # Consul UI访问
  - host: mock-s3-consul.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: consul
            port:
              number: 8500

---
# NodePort Services for direct access (alternative to Ingress)
apiVersion: v1
kind: Service
metadata:
  name: metadata-service-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: metadata-service
  ports:
  - port: 8081
    targetPort: 8081
    nodePort: 30081

---
apiVersion: v1
kind: Service
metadata:
  name: storage-service-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: storage-service
  ports:
  - port: 8082
    targetPort: 8082
    nodePort: 30082

---
apiVersion: v1
kind: Service
metadata:
  name: queue-service-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: queue-service
  ports:
  - port: 8083
    targetPort: 8083
    nodePort: 30083

---
apiVersion: v1
kind: Service
metadata:
  name: third-party-service-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: third-party-service
  ports:
  - port: 8084
    targetPort: 8084
    nodePort: 30084

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30300

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 30900

---
apiVersion: v1
kind: Service
metadata:
  name: consul-nodeport
  namespace: zeroops
spec:
  type: NodePort
  selector:
    app: consul
  ports:
  - port: 8500
    targetPort: 8500
    nodePort: 30500