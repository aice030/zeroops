# Build stage
FROM golang:1.24-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装必要的包
RUN apk add --no-cache git

# 复制go mod文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 构建应用
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o queue-service ./services/queue/cmd/server

# Runtime stage
FROM alpine:latest

# 安装ca证书和时区数据，使用重试和镜像
RUN apk update --no-cache || \
    (echo "https://mirror.alpinelinux.org/alpine/v3.19/main" > /etc/apk/repositories && \
     echo "https://mirror.alpinelinux.org/alpine/v3.19/community" >> /etc/apk/repositories && \
     apk update --no-cache) && \
    apk add --no-cache ca-certificates tzdata

# 设置时区
ENV TZ=Asia/Shanghai

# 创建非root用户
RUN addgroup -g 1001 appgroup && \
    adduser -u 1001 -G appgroup -s /bin/sh -D appuser

# 设置工作目录
WORKDIR /app

# 从构建阶段复制二进制文件
COPY --from=builder /app/queue-service .

# 更改文件所有者
RUN chown -R appuser:appgroup /app

# 切换到非root用户
USER appuser

# 暴露端口
EXPOSE 8083

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8083/health || exit 1

# 启动应用
CMD ["./queue-service"]