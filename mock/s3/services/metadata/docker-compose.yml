version: '3.8'

services:
  metadata-service:
    build: .
    ports:
      - "8081:8081"
    environment:
      - SERVICE_PORT=8081
      - SERVICE_VERSION=1.0.0
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - DB_DRIVER=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=mocks3_metadata
      - DB_SSL_MODE=disable
      - CONSUL_ADDR=consul:8500
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    depends_on:
      - postgres
      - consul
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - mocks3-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mocks3_metadata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - mocks3-network

  consul:
    image: consul:1.15
    command: consul agent -dev -client=0.0.0.0 -ui
    ports:
      - "8500:8500"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - mocks3-network

volumes:
  postgres_data:

networks:
  mocks3-network:
    driver: bridge